#!/usr/local/bin/bash

light_green='\033[92m'
green='\033[32m'
red='\033[31m'
clear='\033[0m'
orange="\033[38;5;11m"
purple='\033[35m'

func_visibility() {
    if [[ $visibility = "" ]]; then
        visibility="public"
    fi
    create_repo=$create_repo" --$visibility"
}

func_readme() {
    if [[ $add_readme = "yes" ]]; then
        create_repo=$create_repo" --add-readme"
    fi
}

func_license() {
    if [[ $add_license = "yes" ]]; then
        license="MIT"
    fi
    create_repo=$create_repo" --license $license"
}

func_clone() {
    cwd=$(pwd)
    cd "$local_path" || echo -e "${purple}X Local directory doesn't exist.${clear}"
    func_repo
    cd "$cwd" || echo "Path error"
}

func_obs_note() {
    echo "Creating Obsidian note..."
    cp "/Users/suraj.kumar/Library/CloudStorage/GoogleDrive-asurajkumar.88@gmail.com/Other computers/My Laptop/g_sync/markdown_notes_vault/Templates/Temp personal Projects.md" "/Users/suraj.kumar/Library/CloudStorage/GoogleDrive-asurajkumar.88@gmail.com/Other computers/My Laptop/g_sync/markdown_notes_vault/Hidden/$project_name.md"
    echo -e "${purple}✓${clear} Obsidian note with name $project_name.md has been created."
}

func_repo() {
    echo "Creating Github repo..."
    create_repo="gh repo create $project_name --clone"
    func_visibility
    func_readme
    func_license
    
    for try in $(seq 1 5) ; do
        out=$($create_repo --description "${project_desc}" 2>&1)
        if [[ "${out[*]:32:${#project_name}}" = "$project_name" ]]; then
            echo -e "${orange}✓${clear} Created repository SurajKumar88/$project_name on Github"
            # echo "  $out"
            break
        elif [[ "${out[*]::8}" = "HTTP 422" ]]; then
            echo -e "${red}X A repository with this name already exists${clear}"
            break
        else
            if [[ $try -eq 5 ]]; then
                echo "Github repo couldn't be created in 5 tries, please check inputs or connection."
                echo -e "${red}ERROR${clear} => $out"
            fi
        fi
    done
}

##### Functions for Getting Project details
get_projectName() {
    printf "%b?%b Project name: " "$light_green" "$clear"
    # echo -ne "$light_green?$clear Project name -> "
    regex='^[0-9A-Za-z!@#$%^&*()_+-={}|\;:<>/?"]+$' ##
    while read -r -N1 -s char; do
        case "$char" in
            $'\177') project_name=${project_name%?};;
            $' ')   project_name=$(printf '%s ' "$project_name");; # echo "Space is pressed";;
            $'\n')  if [[ $project_name =~ $regex ]]; then
                        printf '\n'
                        break
                    else
                        printf '\r\e[K\e[31mX\e[0m Project name: \e[31m%s\e[0m {Spaces are not allowed}\n' "$project_name"
                    fi ;;
            *) project_name+=$char;;
        esac
        # printf "\r${light_green}?${clear} Project name: \e[K"
        if [[ $project_name =~ $regex ]]; then
            printf "\r%b?%b Project name: \e[K" "$light_green" "$clear"
            printf '\e[32m'
        else
            printf "\r%bX%b Project name: \e[K" "$red" "$clear"
            printf '\e[31m'
        fi
        printf '%s\e[0m' "$project_name"
    done
}

get_args() {
    get_projectName
    # read -re -p "$(echo -e "$light_green?$clear Project name -> ")" project_name
    echo -n -e "${light_green}?${clear} Description -> " ; read -re project_desc
    echo -n -e "${light_green}?${clear} Visibility -> "; read -re visibility
    echo -n -e "${light_green}?${clear} Do you want to add License? -> " ; read -re add_license
    if [[ $add_license = "yes" ]]; then
        echo -n -e "${light_green}?${clear} Enter the Open source license to add -> " ; read -re license
    fi
    echo -n -e "${light_green}?${clear} Do you want to add a README file? -> "; read -re add_readme
    echo -n -e "${light_green}?${clear} Path for local directory (leave empty for CWD) -> "; read -re local_path
}   

main() {

    get_args
    if [[ -n $local_path ]]; then
        func_clone
    else
        func_repo
    fi
    # func_obs_note
    echo -e "${green}✓${clear} Project $project_name has been initiated successfully!!!"
}

main "$@"